{"ast":null,"code":"\"use strict\";\n\n// // import { Component, OnInit } from '@angular/core';\n// import { Component, OnInit } from '@angular/core';\n// import { ActivatedRoute, Router } from '@angular/router';\n// import { Product } from 'src/app/Model/product';\n// import { ProductService } from 'src/app/Services/product.service';\n// @Component({\n//   selector: 'app-update',\n//   templateUrl: './update.component.html',\n//   styleUrls: ['./update.component.css']\n// })\n// export class UpdateComponent implements OnInit {\n//   productId!: number;\n//   product: Product = { id: 0, name: '', image: '', price: 0 }; // Initialize product with default values\n//   error: string = '';\n//   constructor(\n//     private route: ActivatedRoute,\n//     private router: Router,\n//     private productService: ProductService\n//   ) { }\n//   ngOnInit(): void {\n//     const idParam = this.route.snapshot.paramMap.get('id');\n//     if (idParam) {\n//       this.productId = +idParam;\n//       this.getProduct(this.productId);\n//     } else {\n//       // Handle the case when the ID parameter is missing\n//       console.error('Product ID parameter is missing.');\n//       // You can redirect to another page or display an error message here\n//     }\n//   }\n//   getProduct(id: number): void {\n//     this.productService.getProductById(id)\n//       .subscribe(\n//         (product: Product) => {\n//           this.product = product;\n//         },\n//         (error: any) => {\n//           this.error = 'Error occurred while retrieving the product.';\n//           console.error(error);\n//         }\n//       );\n//   }\n//   // updateProduct(): void {\n//   //   this.productService.updateProduct(this.productId, this.product)\n//   //     .subscribe(\n//   //       (updatedProduct: Product) => {\n//   //         console.log('Product updated successfully:', updatedProduct);\n//   //         this.router.navigate(['/products']); // Navigate to the products list page\n//   //       },\n//   //       (error: any) => {\n//   //         this.error = 'Error occurred while updating the product.';\n//   //         console.error(error);\n//   //       }\n//   //     );\n//   // }\n//   updateProduct(): void {\n//     this.productService.updateProduct(this.productId, this.product)\n//       .subscribe(\n//         (updatedProduct: Product) => {\n//           console.log('Product updated successfully:', updatedProduct);\n//           this.router.navigate(['/products']); // Navigate to the products list page\n//         },\n//         (error: any) => {\n//           this.error = 'Error occurred while updating the product.';\n//           console.error(error);\n//         }\n//       );\n//   }\n// }","map":{"version":3,"mappings":";;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":[],"sourceRoot":"","sources":["C:\\Users\\245217\\Downloads\\capstone-project-front-end-master (1)\\capstone-project-front-end-master\\src\\app\\component\\update\\update.component.ts"],"sourcesContent":["// // import { Component, OnInit } from '@angular/core';\n// import { Component, OnInit } from '@angular/core';\n// import { ActivatedRoute, Router } from '@angular/router';\n// import { Product } from 'src/app/Model/product';\n// import { ProductService } from 'src/app/Services/product.service';\n\n// @Component({\n//   selector: 'app-update',\n//   templateUrl: './update.component.html',\n//   styleUrls: ['./update.component.css']\n// })\n// export class UpdateComponent implements OnInit {\n//   productId!: number;\n//   product: Product = { id: 0, name: '', image: '', price: 0 }; // Initialize product with default values\n//   error: string = '';\n\n//   constructor(\n//     private route: ActivatedRoute,\n//     private router: Router,\n//     private productService: ProductService\n//   ) { }\n\n//   ngOnInit(): void {\n//     const idParam = this.route.snapshot.paramMap.get('id');\n    \n//     if (idParam) {\n//       this.productId = +idParam;\n//       this.getProduct(this.productId);\n//     } else {\n//       // Handle the case when the ID parameter is missing\n//       console.error('Product ID parameter is missing.');\n//       // You can redirect to another page or display an error message here\n//     }\n//   }\n\n//   getProduct(id: number): void {\n//     this.productService.getProductById(id)\n    \n//       .subscribe(\n//         (product: Product) => {\n//           this.product = product;\n//         },\n//         (error: any) => {\n//           this.error = 'Error occurred while retrieving the product.';\n//           console.error(error);\n//         }\n//       );\n//   }\n\n//   // updateProduct(): void {\n//   //   this.productService.updateProduct(this.productId, this.product)\n    \n//   //     .subscribe(\n//   //       (updatedProduct: Product) => {\n//   //         console.log('Product updated successfully:', updatedProduct);\n//   //         this.router.navigate(['/products']); // Navigate to the products list page\n//   //       },\n//   //       (error: any) => {\n//   //         this.error = 'Error occurred while updating the product.';\n//   //         console.error(error);\n//   //       }\n//   //     );\n//   // }\n//   updateProduct(): void {\n//     this.productService.updateProduct(this.productId, this.product)\n//       .subscribe(\n//         (updatedProduct: Product) => {\n//           console.log('Product updated successfully:', updatedProduct);\n//           this.router.navigate(['/products']); // Navigate to the products list page\n//         },\n//         (error: any) => {\n//           this.error = 'Error occurred while updating the product.';\n//           console.error(error);\n//         }\n//       );\n//   }\n// }\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}