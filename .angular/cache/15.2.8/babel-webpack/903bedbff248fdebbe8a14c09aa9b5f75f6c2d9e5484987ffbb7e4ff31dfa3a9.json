{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/Services/product.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UpdateproductComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.successMessage, \" \");\n  }\n}\nexport class UpdateproductComponent {\n  constructor(route, router, productService) {\n    this.route = route;\n    this.router = router;\n    this.productService = productService;\n    this.product = {\n      id: 0,\n      name: '',\n      price: 0,\n      image: ''\n    };\n    this.successMessage = ''; // Add the successMessage property\n  }\n\n  ngOnInit() {\n    this.productId = Number(this.route.snapshot.paramMap.get('id'));\n    this.getProduct();\n  }\n  getProduct() {\n    this.productService.getProductById(this.productId).subscribe(product => {\n      this.product = product;\n    }, error => {\n      console.log(error);\n    });\n  }\n  updateProduct() {\n    console.log(\"update\");\n    this.productService.updateProduct(this.product).subscribe(() => {\n      console.log('Product updated successfully.');\n      this.successMessage = 'Successfully updated';\n      // this.router.navigate(['/admin']); // Redirect to the admin page after successful update\n    }, error => {\n      console.log(error);\n    });\n  }\n}\nUpdateproductComponent.ɵfac = function UpdateproductComponent_Factory(t) {\n  return new (t || UpdateproductComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ProductService));\n};\nUpdateproductComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateproductComponent,\n  selectors: [[\"app-updateproduct\"]],\n  decls: 38,\n  vars: 4,\n  consts: [[1, \"credit-card\"], [1, \"container\"], [1, \"card-holder\"], [1, \"card-box\", \"bg-news\"], [1, \"row\"], [1, \"col-lg-6\"], [1, \"img-box\"], [\"src\", \"\", 1, \"img-fluid\"], [3, \"ngSubmit\"], [1, \"card-details\"], [1, \"title\", 2, \"font-size\", \"30px\"], [1, \"form-group\", \"col-sm-7\"], [1, \"inner-addon\", \"right-addon\"], [\"for\", \"name\"], [1, \"far\", \"fa-user\"], [\"id\", \"name\", \"type\", \"text\", \"placeholder\", \"Name\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\", \"col-sm-8\"], [\"for\", \"image\"], [1, \"far\", \"fa-credit-card\"], [\"id\", \"image\", \"type\", \"text\", \"placeholder\", \"Image URL\", \"name\", \"image\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\", \"col-sm-4\"], [\"for\", \"price\"], [\"id\", \"price\", \"type\", \"number\", \"placeholder\", \"Price\", \"name\", \"price\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"class\", \"alert success\", 4, \"ngIf\"], [1, \"form-group\", \"col-sm-12\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-block\"], [1, \"alert\", \"success\"]],\n  template: function UpdateproductComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6);\n      i0.ɵɵelement(7, \"img\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"header\");\n      i0.ɵɵelement(9, \"nav\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 5)(11, \"form\", 8);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateproductComponent_Template_form_ngSubmit_11_listener() {\n        return ctx.updateProduct();\n      });\n      i0.ɵɵelementStart(12, \"div\", 9)(13, \"h3\", 10);\n      i0.ɵɵtext(14, \"Update Product\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 4)(16, \"div\", 11)(17, \"div\", 12)(18, \"label\", 13);\n      i0.ɵɵtext(19, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"i\", 14);\n      i0.ɵɵelementStart(21, \"input\", 15);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateproductComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.product.name = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"div\", 16)(23, \"div\", 12)(24, \"label\", 17);\n      i0.ɵɵtext(25, \"Image URL\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"i\", 18);\n      i0.ɵɵelementStart(27, \"input\", 19);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateproductComponent_Template_input_ngModelChange_27_listener($event) {\n        return ctx.product.image = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(28, \"div\", 20)(29, \"label\", 21);\n      i0.ɵɵtext(30, \"Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"input\", 22);\n      i0.ɵɵlistener(\"ngModelChange\", function UpdateproductComponent_Template_input_ngModelChange_31_listener($event) {\n        return ctx.product.price = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(32, \"br\")(33, \"br\");\n      i0.ɵɵtemplate(34, UpdateproductComponent_div_34_Template, 2, 1, \"div\", 23);\n      i0.ɵɵelementStart(35, \"div\", 24)(36, \"button\", 25);\n      i0.ɵɵtext(37, \"Submit\");\n      i0.ɵɵelementEnd()()()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"ngModel\", ctx.product.name);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.product.image);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.product.price);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 748:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(47:1) C:\\\\\\\\Users\\\\\\\\245217\\\\\\\\Downloads\\\\\\\\capstone-project-front-end-master (1)\\\\\\\\capstone-project-front-end-master\\\\\\\\src\\\\\\\\app\\\\\\\\component\\\\\\\\updateproduct\\\\\\\\updateproduct.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 45 | \\\\u001b[39mfilter\\\\u001b[33m:\\\\u001b[39m \\\\u001b[36mhue-rotate\\\\u001b[39m\\\\u001b[36m(0deg)\\\\u001b[39m\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 46 | \\\\u001b[39mw\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 47 | \\\\u001b[39mborder\\\\u001b[33m:\\\\u001b[39m none !important\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m    | \\\\u001b[39m\\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 48 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m\\\\n \\\\u001b[90m 49 | \\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t})[_ngcontent-%COMP%];\\n\\n \\t\\n \\t//[_ngcontent-%COMP%]   startup[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   Load[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   and[_ngcontent-%COMP%]   return[_ngcontent-%COMP%]   exports[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   This[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   doesn't[_ngcontent-%COMP%]   tell[_ngcontent-%COMP%]   about[_ngcontent-%COMP%]   it's[_ngcontent-%COMP%]   top-level[_ngcontent-%COMP%]   declarations[_ngcontent-%COMP%]   so[_ngcontent-%COMP%]   it[_ngcontent-%COMP%]   can't[_ngcontent-%COMP%]   be[_ngcontent-%COMP%]   inlined[_ngcontent-%COMP%]   var[_ngcontent-%COMP%]   __webpack_exports__[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] {};\\n \\t__webpack_modules__[748]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=updateproduct.component.css.map*/\"]\n});","map":{"version":3,"mappings":";;;;;;;IA8CkBA,+BAAkD;IAChDA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,sDACF;;;ACtClB,OAAM,MAAOC,sBAAsB;EAWjCC,YACUC,KAAqB,EACrBC,MAAc,EACdC,cAA8B;IAF9B,UAAK,GAALF,KAAK;IACL,WAAM,GAANC,MAAM;IACN,mBAAc,GAAdC,cAAc;IAZxB,YAAO,GAAY;MACjBC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,CAAC;MACRC,KAAK,EAAE;KACR;IAED,mBAAc,GAAW,EAAE,CAAC,CAAC;EAMzB;;EAEJC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAGC,MAAM,CAAC,IAAI,CAACT,KAAK,CAACU,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC/D,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAU;IAER,IAAI,CAACX,cAAc,CAACY,cAAc,CAAC,IAAI,CAACN,SAAS,CAAC,CAACO,SAAS,CACzDC,OAAgB,IAAI;MACnB,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CACF;EACH;EAEAG,aAAa;IACXF,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,IAAI,CAACjB,cAAc,CAACkB,aAAa,CAAC,IAAI,CAACJ,OAAO,CAAC,CAACD,SAAS,CACvD,MAAK;MACHG,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5C,IAAI,CAACE,cAAc,GAAG,sBAAsB;MAC5C;IACF,CAAC,EACAJ,KAAK,IAAI;MACRC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB,CAAC,CACF;EACH;;AA9CWnB,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAwB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDVnC7B,kCAA6B;MAOfA,yBAAgC;MAClCA,iBAAM;MACNA,8BAAQ;MACNA,sBAEM;MACRA,iBAAS;MAEXA,+BAAsB;MACdA;QAAA,OAAY8B,mBAAe;MAAA,EAAC;MAChC9B,+BAA0B;MACmBA,+BAAc;MAAAA,iBAAK;MAC9DA,+BAAiB;MAGOA,qBAAI;MAAAA,iBAAQ;MAC9BA,yBAA2B;MAC3BA,kCAAqH;MAAhDA;QAAA;MAAA,EAA0B;MAA/FA,iBAAqH;MASzHA,gCAAiC;MAEVA,0BAAS;MAAAA,iBAAQ;MACpCA,yBAAkC;MAClCA,kCAA6H;MAAlDA;QAAA;MAAA,EAA2B;MAAtGA,iBAA6H;MAGjIA,gCAAiC;MACZA,sBAAK;MAAAA,iBAAQ;MAChCA,kCAA2H;MAAlDA;QAAA;MAAA,EAA2B;MAApGA,iBAA2H;MAE7HA,sBAAI;MAEJA,0EAEM;MACNA,gCAAkC;MACwBA,uBAAM;MAAAA,iBAAS;;;MA1BAA,gBAA0B;MAA1BA,0CAA0B;MAapBA,eAA2B;MAA3BA,2CAA2B;MAK/BA,eAA2B;MAA3BA,2CAA2B;MAI1EA,eAAoB;MAApBA,yCAAoB","names":["i0","UpdateproductComponent","constructor","route","router","productService","id","name","price","image","ngOnInit","productId","Number","snapshot","paramMap","get","getProduct","getProductById","subscribe","product","error","console","log","updateProduct","successMessage","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\245217\\Downloads\\capstone-project-front-end-master (1)\\capstone-project-front-end-master\\src\\app\\component\\updateproduct\\updateproduct.component.html","C:\\Users\\245217\\Downloads\\capstone-project-front-end-master (1)\\capstone-project-front-end-master\\src\\app\\component\\updateproduct\\updateproduct.component.ts"],"sourcesContent":["<section class=\"credit-card\">\n  <div class=\"container\">\n    <div class=\"card-holder\">\n      <div class=\"card-box bg-news\">\n        <div class=\"row\">\n          <div class=\"col-lg-6\">\n            <div class=\"img-box\">\n              <img src=\"\" class=\"img-fluid\" />\n            </div>\n            <header>\n              <nav>\n                <!-- Navigation content -->\n              </nav>\n            </header>\n          </div>\n          <div class=\"col-lg-6\">\n            <form (ngSubmit)=\"updateProduct()\">\n              <div class=\"card-details\">\n                <h3 class=\"title\" style=\"font-size: 30px;\">Update Product</h3>\n                <div class=\"row\">\n                  <div class=\"form-group col-sm-7\">\n                    <div class=\"inner-addon right-addon\">\n                      <label for=\"name\">Name</label>\n                      <i class=\"far fa-user\"></i>\n                      <input id=\"name\" type=\"text\" class=\"form-control\" placeholder=\"Name\" [(ngModel)]=\"product.name\" name=\"name\" required>\n                    </div>\n                  </div>\n                  <!-- <div class=\"form-group col-sm-5\">\n                    <label for=\"id\">Id</label>\n                    <div class=\"input-group expiration-date\">\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Id\" [(ngModel)]=\"product.id\" name=\"id\" required>\n                    </div>\n                  </div> -->\n                  <div class=\"form-group col-sm-8\">\n                    <div class=\"inner-addon right-addon\">\n                      <label for=\"image\">Image URL</label>\n                      <i class=\"far fa-credit-card\"></i>\n                      <input id=\"image\" type=\"text\" class=\"form-control\" placeholder=\"Image URL\" [(ngModel)]=\"product.image\" name=\"image\" required>\n                    </div>\n                  </div>\n                  <div class=\"form-group col-sm-4\">\n                    <label for=\"price\">Price</label>\n                    <input id=\"price\" type=\"number\" class=\"form-control\" placeholder=\"Price\" [(ngModel)]=\"product.price\" name=\"price\" required>\n                  </div>\n                  <br>\n                  <br>\n                  <div class=\"alert success\" *ngIf=\"successMessage\">\n                    {{ successMessage }}\n                  </div>\n                  <div class=\"form-group col-sm-12\">\n                    <button type=\"submit\" class=\"btn btn-primary btn-block\">Submit</button>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div><!--/col-lg-6 -->\n        </div><!--/row -->\n      </div><!--/card-box -->\n    </div><!--/card-holder -->\n  </div><!--/container -->\n</section>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- <div class=\"container\">\n  <div></div>\n    <h2>Update Product</h2>\n    <form (ngSubmit)=\"updateProduct()\">\n      <div class=\"form-group\">\n        <label for=\"name\">Product Name</label>\n        <input type=\"text\" id=\"name\" name=\"name\" [(ngModel)]=\"product.name\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"price\">Price</label>\n        <input type=\"number\" id=\"price\" name=\"price\" [(ngModel)]=\"product.price\" class=\"form-control\">\n      </div>\n      <div class=\"form-group\">\n        <label for=\"image\">Image URL</label>\n        <input type=\"text\" id=\"image\" name=\"image\" [(ngModel)]=\"product.image\" class=\"form-control\">\n      </div>\n      <button type=\"submit\" class=\"btn btn-primary\">Update</button>\n    </form>\n  </div> -->\n  \n\n\n\n\n\n\n\n\n<!-- <!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <link rel=\"stylesheet\" href=\"updateproduct.component.css\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\">\n    <title>Login | Ludiflex - youtube channel</title>\n</head>\n<body>\n    <div class=\"wrapper\">\n        <div class=\"container main\">\n            <div class=\"row\">\n                \n                <div class=\"col-md-6 right\">\n                     <div class=\"input-box\">\n                        <header><h1>Update Product</h1></header>\n                        <div class=\"input-field\">\n                            <input type=\"text\" class=\"input\" id=\"name\" name=\"name\"   [(ngModel)]=\"product.name\">\n                            <label for=\"email\">Product Name</label>\n                        </div>\n                       \n                        <div class=\"input-field\">\n                          <input type=\"number\" class=\"input\" id=\"price\" name=\"price\"  [(ngModel)]=\"product.price\">\n                          <label for=\"price\">Price</label>\n                      </div>\n                        <div class=\"input-field\">\n                          <input type=\"text\" class=\"input\" id=\"image\" required autocomplete=\"off\"  [(ngModel)]=\"product.image\" >\n                          <label for=\"image\">Image Url</label>\n                      </div>\n                        <div class=\"input-field\">\n\n                            <input type=\"submit\" class=\"submit\"  value=\"Update\" (ngSubmit)=\"updateProduct()\">\n                            \n                        </div>\n                       \n                     </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</body>\n</html> -->\n\n<!-- <!DOCTYPE html>\n<html lang=\"en\">\n\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <link rel=\"stylesheet\" href=\"updateproduct.component.css\">\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\">\n  <title>Update Product | Ludiflex - YouTube Channel</title>\n</head>\n\n<body>\n  <div class=\"wrapper\">\n    <div class=\"container main\">\n      <div class=\"row\">\n        <div class=\"col-md-6 right\">\n          <div class=\"input-box\">\n            <header>\n              <h1>Update Product</h1>\n            </header>\n            <form (submit)=\"updateProduct()\">\n              <div class=\"input-field\">\n                <input type=\"text\" class=\"input\" id=\"name\" name=\"name\" required autocomplete=\"off\" [(ngModel)]=\"product.name\">\n                <label for=\"name\">Product Name</label>\n              </div>\n              <div class=\"input-field\">\n                <input type=\"number\" class=\"input\" id=\"price\" name=\"price\" [(ngModel)]=\"product.price\">\n                <label for=\"price\">Price</label>\n              </div>\n              <div class=\"input-field\">\n                <input type=\"text\" class=\"input\" id=\"image\" required autocomplete=\"off\" [(ngModel)]=\"product.image\">\n                <label for=\"image\">Image URL</label>\n              </div>\n              <div class=\"input-field\">\n                <button type=\"submit\" class=\"submit\">Update</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</body>\n\n</html> -->\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Product } from 'src/app/Model/product';\nimport { ProductService } from 'src/app/Services/product.service';\n\n@Component({\n  selector: 'app-updateproduct',\n  templateUrl: './updateproduct.component.html',\n  styleUrls: ['./updateproduct.component.css']\n})\nexport class UpdateproductComponent implements OnInit {\n  productId!: number;\n  product: Product = {\n    id: 0,\n    name: '',\n    price: 0,\n    image: ''\n  };\n\n  successMessage: string = ''; // Add the successMessage property\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private productService: ProductService\n  ) { }\n\n  ngOnInit() {\n    this.productId = Number(this.route.snapshot.paramMap.get('id'));\n    this.getProduct();\n  }\n\n  getProduct() {\n    \n    this.productService.getProductById(this.productId).subscribe(\n      (product: Product) => {\n        this.product = product;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  updateProduct() {\n    console.log(\"update\");\n    this.productService.updateProduct(this.product).subscribe(\n      () => {\n        console.log('Product updated successfully.');\n        this.successMessage = 'Successfully updated';\n        // this.router.navigate(['/admin']); // Redirect to the admin page after successful update\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}