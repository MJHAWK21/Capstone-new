{"ast":null,"code":"import { __decorate } from \"tslib\";\nlet UpdateComponent = class UpdateComponent {\n  constructor(route, router, productService) {\n    this.route = route;\n    this.router = router;\n    this.productService = productService;\n    this.product = {\n      id: 0,\n      name: '',\n      image: '',\n      price: 0\n    }; // Initialize product with default values\n    this.error = '';\n  }\n  ngOnInit() {\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam) {\n      this.productId = +idParam;\n      this.getProduct(this.productId);\n    } else {\n      // Handle the case when the ID parameter is missing\n      console.error('Product ID parameter is missing.');\n    }\n  }\n  getProduct(id) {\n    this.productService.getProductById(id).subscribe(product => {\n      this.product = product;\n    }, error => {\n      this.error = 'Error occurred while retrieving the product.';\n      console.error(error);\n    });\n  }\n  updateProduct() {\n    this.productService.updateProduct(this.productId, this.product).subscribe(updatedProduct => {\n      console.log('Product updated successfully:', updatedProduct);\n      this.router.navigate(['/products']); // Navigate to the products list page\n    }, error => {\n      this.error = 'Error occurred while updating the product.';\n      console.error(error);\n    });\n  }\n};\nUpdateComponent = __decorate([Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})], UpdateComponent);\nexport { UpdateComponent };","map":{"version":3,"mappings":";AAUO,IAAMA,eAAe,GAArB,MAAMA,eAAe;EAK1BC,YACUC,KAAqB,EACrBC,MAAc,EACdC,cAA8B;IAF9B,UAAK,GAALF,KAAK;IACL,WAAM,GAANC,MAAM;IACN,mBAAc,GAAdC,cAAc;IANxB,YAAO,GAAY;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,KAAK,EAAE;IAAC,CAAE,CAAC,CAAC;IAC7D,UAAK,GAAW,EAAE;EAMd;EAEJC,QAAQ;IACN,MAAMC,OAAO,GAAG,IAAI,CAACR,KAAK,CAACS,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC;IACtD,IAAIH,OAAO,EAAE;MACX,IAAI,CAACI,SAAS,GAAG,CAACJ,OAAO;MACzB,IAAI,CAACK,UAAU,CAAC,IAAI,CAACD,SAAS,CAAC;KAChC,MAAM;MACL;MACAE,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;;EAErD;EAEAF,UAAU,CAACV,EAAU;IACnB,IAAI,CAACD,cAAc,CAACc,cAAc,CAACb,EAAE,CAAC,CACnCc,SAAS,CACPC,OAAgB,IAAI;MACnB,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB,CAAC,EACAH,KAAU,IAAI;MACb,IAAI,CAACA,KAAK,GAAG,8CAA8C;MAC3DD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACL;EAEAI,aAAa;IACX,IAAI,CAACjB,cAAc,CAACiB,aAAa,CAAC,IAAI,CAACP,SAAS,EAAE,IAAI,CAACM,OAAO,CAAC,CAC5DD,SAAS,CACPG,cAAuB,IAAI;MAC1BN,OAAO,CAACO,GAAG,CAAC,+BAA+B,EAAED,cAAc,CAAC;MAC5D,IAAI,CAACnB,MAAM,CAACqB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC,EACAP,KAAU,IAAI;MACb,IAAI,CAACA,KAAK,GAAG,4CAA4C;MACzDD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CACF;EACL;CACD;AAhDYjB,eAAe,eAL3ByB,SAAS,CAAC;EACTC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,GACW5B,eAAe,CAgD3B;SAhDYA,eAAe","names":["UpdateComponent","constructor","route","router","productService","id","name","image","price","ngOnInit","idParam","snapshot","paramMap","get","productId","getProduct","console","error","getProductById","subscribe","product","updateProduct","updatedProduct","log","navigate","Component","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\245217\\Downloads\\capstone-project-front-end-master (1)\\capstone-project-front-end-master\\src\\app\\component\\update\\update.component.ts"],"sourcesContent":["// import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Product } from 'src/app/Model/product';\nimport { ProductService } from 'src/app/Services/product.service';\n\n@Component({\n  selector: 'app-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\nexport class UpdateComponent implements OnInit {\n  productId!: number;\n  product: Product = { id: 0, name: '', image: '', price: 0 }; // Initialize product with default values\n  error: string = '';\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private productService: ProductService\n  ) { }\n\n  ngOnInit(): void {\n    const idParam = this.route.snapshot.paramMap.get('id');\n    if (idParam) {\n      this.productId = +idParam;\n      this.getProduct(this.productId);\n    } else {\n      // Handle the case when the ID parameter is missing\n      console.error('Product ID parameter is missing.');\n    }\n  }\n\n  getProduct(id: number): void {\n    this.productService.getProductById(id)\n      .subscribe(\n        (product: Product) => {\n          this.product = product;\n        },\n        (error: any) => {\n          this.error = 'Error occurred while retrieving the product.';\n          console.error(error);\n        }\n      );\n  }\n\n  updateProduct(): void {\n    this.productService.updateProduct(this.productId, this.product)\n      .subscribe(\n        (updatedProduct: Product) => {\n          console.log('Product updated successfully:', updatedProduct);\n          this.router.navigate(['/products']); // Navigate to the products list page\n        },\n        (error: any) => {\n          this.error = 'Error occurred while updating the product.';\n          console.error(error);\n        }\n      );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}